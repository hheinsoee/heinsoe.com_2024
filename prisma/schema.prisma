generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model map_r_content_r_taxonomy {
  id            Int        @id @default(autoincrement())
  r_content_id  Int
  r_taxonomy_id Int
  create_time   DateTime?  @default(now()) @db.DateTime(0)
  r_content     r_content  @relation(fields: [r_content_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "map_r_content_r_taxonomy_ibfk_1")
  r_taxonomy    r_taxonomy @relation(fields: [r_taxonomy_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "map_r_content_r_taxonomy_ibfk_2")

  @@index([r_content_id], map: "content_id")
  @@index([r_taxonomy_id], map: "taxonomy_id")
}

model map_t_content_t_taxonomy {
  id            Int        @id @default(autoincrement())
  t_taxonomy_id Int
  t_content_id  Int
  create_time   DateTime?  @default(now()) @db.DateTime(0)
  t_taxonomy    t_taxonomy @relation(fields: [t_taxonomy_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "map_t_content_t_taxonomy_ibfk_1")
  t_content     t_content  @relation(fields: [t_content_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "map_t_content_t_taxonomy_ibfk_2")

  @@index([t_taxonomy_id], map: "taxonomy_id")
  @@index([t_content_id], map: "type_id")
}

model r_content {
  id                       Int                        @id @default(autoincrement())
  title                    String                     @db.VarChar(200)
  description              String?                    @db.Text
  body                     String?                    @db.Text
  t_content_id             Int?
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  map_r_content_r_taxonomy map_r_content_r_taxonomy[]
  t_content                t_content?                 @relation(fields: [t_content_id], references: [id], onUpdate: NoAction, map: "r_content_ibfk_1")
  r_field                  r_field[]

  @@index([t_content_id], map: "type_id")
}

model r_field {
  id           Int        @id @default(autoincrement())
  create_time  DateTime?  @default(now()) @db.DateTime(0)
  name         String?    @db.VarChar(255)
  value        String?    @db.Text
  r_content_id Int?
  r_content    r_content? @relation(fields: [r_content_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "r_field_ibfk_1")

  @@index([r_content_id], map: "content_id")
}

model r_taxonomy {
  id                       Int                        @id @default(autoincrement())
  t_taxonomy_id            Int?
  name                     String                     @db.VarChar(200)
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  map_r_content_r_taxonomy map_r_content_r_taxonomy[]
  t_taxonomy               t_taxonomy?                @relation(fields: [t_taxonomy_id], references: [id], onUpdate: NoAction, map: "r_taxonomy_ibfk_1")

  @@index([t_taxonomy_id], map: "taxonomy_id")
}

model t_content {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(200)
  description              String?                    @db.Text
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  map_t_content_t_taxonomy map_t_content_t_taxonomy[]
  r_content                r_content[]
  t_field                  t_field[]
}

model t_field {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(200)
  t_content_id Int?
  data_type    String?    @db.VarChar(20)
  create_time  DateTime?  @default(now()) @db.DateTime(0)
  t_content    t_content? @relation(fields: [t_content_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "t_field_ibfk_1")

  @@index([t_content_id], map: "type_id")
}

model t_taxonomy {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(200)
  description              String?                    @db.Text
  create_time              DateTime?                  @default(now()) @db.DateTime(0)
  map_t_content_t_taxonomy map_t_content_t_taxonomy[]
  r_taxonomy               r_taxonomy[]
}
