generator client {
  provider     = "prisma-client-js"
  previewTechs = ["relationJoins"]
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Experience {
  id           Int       @id @default(autoincrement())
  position     String    @db.VarChar(200)
  startDate    DateTime
  endDate      DateTime?
  organization String?
  description  String    @db.Text
  createdDt    DateTime? @default(now())
  updatedDt    DateTime? @default(now()) @updatedAt
  isDeleted    Boolean   @default(false)

  techs TechOnExperience[]
  tags  TagOnExperience[]
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(200)
  date        DateTime
  description String    @db.Text
  body        String    @db.Text
  url         String?
  createdDt   DateTime? @default(now())
  updatedDt   DateTime? @default(now()) @updatedAt
  isDeleted   Boolean   @default(false)
  imageId     Int?
  image       Image?    @relation(fields: [imageId], references: [id])

  techs TechOnProject[]
  tags  TagOnProject[]
}

model Note {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(200)
  description String    @db.Text
  body        String    @db.Text
  imageId     Int?
  image       Image?    @relation(fields: [imageId], references: [id])
  isDeleted   Boolean   @default(false)
  createdDt   DateTime? @default(now())
  updatedDt   DateTime? @default(now()) @updatedAt

  techs TechOnNote[]
  tags  TagOnNote[]
}

model Image {
  id        Int       @id @default(autoincrement())
  caption   String?
  fileName  String
  createdDt DateTime? @default(now())

  Project Project[]
  Note    Note[]
  Tech    Tech[]
}

model Tech {
  id               Int                @id @default(autoincrement())
  name             String
  order             Int                @default(0)
  imageId          Int?
  image            Image?             @relation(fields: [imageId], references: [id])
  TechOnExperience TechOnExperience[]
  TechOnProject    TechOnProject[]
  TechOnNote       TechOnNote[]
}

model TechOnExperience {
  id           Int        @id @default(autoincrement())
  Experience   Experience @relation(fields: [ExperienceId], references: [id])
  Tech         Tech       @relation(fields: [TechId], references: [id])
  ExperienceId Int
  TechId       Int

  @@map("mapTechExperience") // Specify the name of the intermediate table
}

model TechOnProject {
  id        Int     @id @default(autoincrement())
  Project   Project @relation(fields: [ProjectId], references: [id])
  Tech      Tech    @relation(fields: [TechId], references: [id])
  ProjectId Int
  TechId    Int

  @@map("mapTechProject") // Specify the name of the intermediate table
}

model TechOnNote {
  id     Int  @id @default(autoincrement())
  Note   Note @relation(fields: [NoteId], references: [id])
  Tech   Tech @relation(fields: [TechId], references: [id])
  NoteId Int
  TechId Int

  @@map("mapTechNote") // Specify the name of the intermediate table
}

model Tag {
  id              Int               @id @default(autoincrement())
  name            String
  TagOnExperience TagOnExperience[]
  TagOnProject    TagOnProject[]
  TagOnNote       TagOnNote[]
}

model TagOnExperience {
  id           Int        @id @default(autoincrement())
  Experience   Experience @relation(fields: [ExperienceId], references: [id])
  Tag          Tag        @relation(fields: [TagId], references: [id])
  ExperienceId Int
  TagId        Int

  @@map("mapTagExperience") // Specify the name of the intermediate table
}

model TagOnProject {
  id        Int     @id @default(autoincrement())
  Project   Project @relation(fields: [ProjectId], references: [id])
  Tag       Tag     @relation(fields: [TagId], references: [id])
  ProjectId Int
  TagId     Int

  @@map("mapTagProject") // Specify the name of the intermediate table
}

model TagOnNote {
  id     Int  @id @default(autoincrement())
  Note   Note @relation(fields: [NoteId], references: [id])
  Tag    Tag  @relation(fields: [TagId], references: [id])
  NoteId Int
  TagId  Int

  @@map("mapTagNote") // Specify the name of the intermediate table
}
